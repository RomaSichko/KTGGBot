# -*- coding: utf-8 -*-

from random import randint
import random
from threading import Timer
from time import sleep, time
from cryptography.utils import _ModuleWithDeprecations
# from typing_extensions import runtime
import telebot
import changePass
import os
import codecs
from datetime import datetime
from telebot import types
import json
import smtplib
import base_commands
import re
import key
 
# Define a function for
# for validating an Email
 
 
def validMail(email):
 
    regex = r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b'

    if(re.fullmatch(regex, email)):
        return True
 
    else:
        return False



# test bot
bot = telebot.TeleBot(key.get_test_bot_api())

# main bot
# bot = telebot.TeleBot(key.get_main_bot_api())

global img_id
img_id = 0

global user_base_reset
user_base_reset = {}

global teacher_base_reset
teacher_base_reset = {}

global base_message
base_message = {}

global teacher_message
teacher_message = {}

global teacher_call
teacher_call = {}

admin_base = {}

global mainIDMessage
mainIDMessage = 361

global mailAuth
mailAuth = {}
global teamsAuth
teamsAuth = {}

global lastnameNameAuth
lastnameNameAuth = {}

def delete_contact(msg):
    bot.delete_message(msg.chat.id, msg.id)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    log = codecs.open("log.txt", "a", 'utf-8')
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.row(
        telebot.types.InlineKeyboardButton('–ü—Ä–∞–≤–∏–ª–∞', callback_data='rules'),
        telebot.types.InlineKeyboardButton('FAQ', callback_data='but-faq')
    )
    keyboard.row(
        telebot.types.InlineKeyboardButton('–°–∫–∏–Ω—É—Ç–∏ –ø–∞—Ä–æ–ª—å', callback_data='reset-pass'),
        telebot.types.InlineKeyboardButton('–î–ª—è –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫—ñ–≤', callback_data='teacher')
    )
    keyboard.row(
        telebot.types.InlineKeyboardButton('–ù–∞–ø–∏—Å–∞—Ç–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É', callback_data='message-admin')
    )
    keyboard.row(
        telebot.types.InlineKeyboardButton('–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏', callback_data='admin-online')
     )
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Ç, —è –ö–¢–ì–ì-–±–æ—Ç, –¥–æ–ø–æ–º–æ–∂—É –í–∞–º –≤ —Ä–æ–±–æ—Ç—ñ –∑ MS Teams." + '\n' + "–û–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω–∏–π –ø—É–Ω–∫—Ç –º–µ–Ω—é –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏",reply_markup = keyboard)
    log.write('[' + str(datetime.now()) + ']' + " ID: " + str(message.chat.id) + ' action:' + message.text + ' \n')
    log.close()

@bot.message_handler(commands=['menu'])
def main_menu(message):
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.row(
        telebot.types.InlineKeyboardButton('–ü—Ä–∞–≤–∏–ª–∞', callback_data='rules'),
        telebot.types.InlineKeyboardButton('FAQ', callback_data='but-faq')
    )
    keyboard.row(
        telebot.types.InlineKeyboardButton('–°–∫–∏–Ω—É—Ç–∏ –ø–∞—Ä–æ–ª—å', callback_data='reset-pass'),
        telebot.types.InlineKeyboardButton('–î–ª—è –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫—ñ–≤', callback_data='teacher')
    )
    keyboard.row(
        telebot.types.InlineKeyboardButton('–ù–∞–ø–∏—Å–∞—Ç–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É', callback_data='message-admin')
    )
    keyboard.row(
        telebot.types.InlineKeyboardButton('–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏', callback_data='admin-online')
     )

    bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –ø–æ–¥–∞–ª—å—à—É –¥—ñ—é", reply_markup=keyboard)

    log = codecs.open("log.txt", "a", 'utf-8')
    log.write('[' + str(datetime.now()) + ']' + " ID: " + str(message.chat.id) + ' action:' + message.text + ' \n')
    log.close()


@bot.message_handler(commands=['account'])
def myAccount(message):

    keyboard = types.InlineKeyboardMarkup()
    keyboard.row(
        telebot.types.InlineKeyboardButton('–ó–º—ñ–Ω–∏—Ç–∏ –µ–ª. –ø–æ—à—Ç—É', callback_data='acc-mail'),
        telebot.types.InlineKeyboardButton('–ó–º—ñ–Ω–∏—Ç–∏ MS Teams', callback_data='acc-teams')
        # telebot.types.InlineKeyboardButton('–ó–º—ñ–Ω–∏—Ç–∏ –ø—Ä—ñ–∑–≤–∏—â–µ', callback_data='acc-lastname'),
        # telebot.types.InlineKeyboardButton('–ó–º—ñ–Ω–∏—Ç–∏ —ñ–º\'—è', callback_data='acc-name')
    )

    check = base_commands.checkUserInBase(message.chat.id)

    if check:
        
        if base_commands.getValidTeams(message.chat.id):
            keyboard.row(
                telebot.types.InlineKeyboardButton('–°–∫–∏–Ω—É—Ç–∏ –ø–∞—Ä–æ–ª—å', callback_data='acc-password')
            )
        uData = base_commands.getUserData(message.chat.id)
        bot.send_message(message.chat.id, uData, reply_markup=keyboard)
    else:
        base_commands.addData(message.chat.id, message.chat.username)
        bot.send_message(message.chat.id, "–í–∞—à—ñ –¥–∞–Ω—ñ –∑–∞–Ω–µ—Å–µ–Ω–æ –¥–æ –±–∞–∑–∏, –ø–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ —Ç–∞ –¥–æ–ø–æ–ø–æ–≤–Ω—ñ—Ç—å —ó—Ö")
        uData = base_commands.getUserData(message.chat.id)
        bot.send_message(message.chat.id, uData, reply_markup=keyboard)

@bot.message_handler(content_types=['photo'])
def photo(message):
    global user_base_reset
    if message.chat.id in user_base_reset and user_base_reset[message.chat.id] and user_base_reset[message.chat.id]["stud"]:
        markup = types.ReplyKeyboardRemove(selective=False)

        file = codecs.open("pass.txt", "a", 'utf-8')

        bot.send_message(message.chat.id, "–ó–∞—á–µ–∫–∞–π—Ç–µ –¥–µ—è–∫–∏–π —á–∞—Å. –ü–µ—Ä–µ–≤—ñ—Ä—è—é –≤–∞—à—ñ –¥–∞–Ω—ñ", reply_markup=markup)
        global img_id

        fileID = message.photo[-1].file_id
        file_info = bot.get_file(fileID)
        downloaded_file = bot.download_file(file_info.file_path)

        uphoto = "image" + str(message.chat.id) + ".jpg"

        with open(uphoto, 'wb') as new_file:
            new_file.write(downloaded_file)
        check_true = changePass.resetPass("image" + str(message.chat.id) + ".jpg")

        if check_true[0] == True:
            bot.send_message(message.chat.id, "–î–∞–Ω—ñ –∑–Ω–∞–π–¥–µ–Ω–æ. –ì–µ–Ω–µ—Ä—É—é —Ç–∏–º—á–∞—Å–æ–≤–∏–π –ø–∞—Ä–æ–ª—å")
            msg = bot.send_message(message.chat.id,"–í–∞—à –ª–æ–≥—ñ–Ω: " + check_true[2] + "\n" + "–í–∞—à —Ç–∏–º—á–∞—Å–æ–≤–∏–π –ø–∞—Ä–æ–ª—å: " + check_true[1] + "\n" + "–ü—Ä–∏ –≤—Ö–æ–¥—ñ –∑–º—ñ–Ω—é—î—Ç–µ –ø–∞—Ä–æ–ª—å –Ω–∞ —Å–≤—ñ–π, —è–∫–∏–π –≤ –ø–æ–¥–∞–ª—å—à–æ–º—É –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è –¥–ª—è –≤—Ö–æ–¥—É")

            main_menu(msg)

            file.write(str(datetime.now()) + "\n" + "id: " + str(message.chat.id) + "\n" + "username: " + str(message.chat.username) + "\n" + "–í–∞—à –ª–æ–≥—ñ–Ω: " + check_true[2] + "\n" + "–ü—Ä–∏ –≤—Ö–æ–¥—ñ –∑–º—ñ–Ω—é—î—Ç–µ –ø–∞—Ä–æ–ª—å –Ω–∞ —Å–≤—ñ–π, —è–∫–∏–π –≤ –ø–æ–¥–∞–ª—å—à–æ–º—É –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è –¥–ª—è –≤—Ö–æ–¥—É" + "\n" + "==========================" + "\n")
        
        else:
            keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1, resize_keyboard=1)
            item = types.KeyboardButton("–í—ñ–¥–º—ñ–Ω–∏—Ç–∏")
            keyboard.row(item)

            bot.send_message(message.chat.id,"–í–∏–±–∞—á—Ç–µ, –≤–∞—à—ñ –¥–∞–Ω—ñ –≤ –±–∞–∑—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, —Å–ø—Ä–æ–±—É–π—Ç–µ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —ñ–Ω—à–µ —Ñ–æ—Ç–æ", reply_markup=keyboard)

            file.write(str(datetime.now()) + "\n" + "id: " + str(message.chat.id) + "\n" + "username: " + str(message.chat.username) + "\n" + "–í–∏–±–∞—á—Ç–µ, –≤–∞—à—ñ –¥–∞–Ω—ñ –≤ –±–∞–∑—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, —Å–ø—Ä–æ–±—É–π—Ç–µ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —ñ–Ω—à–µ —Ñ–æ—Ç–æ" + "\n" + "==========================" + "\n")
        
        file.close()
        try:
            os.remove(uphoto)
        except FileNotFoundError:
            pass
        img_id += 1

        log = codecs.open("log.txt", "a", 'utf-8')
        log.write('[' + str(datetime.now()) + ']' + " ID: " + str(message.chat.id) + ' action: photo' + ' \n')
        log.close()
    else:
        bot.send_message(message.chat.id, "–ù–µ–≤—ñ–¥–æ–º–∞ –¥—ñ—è")


@bot.message_handler(commands=['admin_panel'])
def admin_panel(message):
    global admin_base

    if message.chat.id not in admin_base:
    
        bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å")

        
        admin_base.update({message.chat.id:{}})
        admin_base[message.chat.id].update({"user":message.chat.id, "verify": False})

        print(admin_base)


    elif admin_base[message.chat.id]["verify"]:

        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.row(
            telebot.types.InlineKeyboardButton('–°–∫–∏–Ω—É—Ç–∏ –ø–∞—Ä–æ–ª—å –ø–æ id', callback_data='admin-id'),
            telebot.types.InlineKeyboardButton('–°–∫–∏–Ω—É—Ç–∏ –ø–∞—Ä–æ–ª—å –ü–Ü–ë', callback_data='admin-pib')
        )
        keyboard.row(
            telebot.types.InlineKeyboardButton('–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è', callback_data='admin-send'),
            telebot.types.InlineKeyboardButton('–í–∏–¥–∞–ª–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞', callback_data='admin-delete')
        )
        # keyboard.row(
        #     telebot.types.InlineKeyboardButton('–ö–∞—Ä—Ç—Ä–∏–¥–∂—ñ', callback_data='admin-cart')
        # )
        keyboard.row(
            telebot.types.InlineKeyboardButton('–í–∏–π—Ç–∏', callback_data='admin-quit')
        )

        bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é", reply_markup=keyboard)
    else:
        bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å")

    log = codecs.open("log.txt", "a", 'utf-8')
    log.write('[' + str(datetime.now()) + ']' + " ID: " + str(message.chat.id) + ' action:' + message.text + ' \n')
    log.close()
    
@bot.message_handler(commands=['setstatus'])
def status(message):
    keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1, resize_keyboard=1)
    keyboard.row(
        types.KeyboardButton("üî¥"),
        types.KeyboardButton('üü†'),
        types.KeyboardButton("üü°"),
        types.KeyboardButton("üü¢")
    )

    base = json.load(codecs.open("admin.json", 'r', 'utf-8-sig'))

    for i in base:
        if i['id'] == message.chat.id:
            bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –æ–¥–∏–Ω —ñ–∑ —Å—Ç–∞—Ç—É—Å—ñ–≤" + '\n' + 'üî¥ - –∑–∞–π–Ω—è—Ç–∏–π' + '\n' + 'üü† - –Ω–µ –∞–∫—Ç–∏–≤–Ω–∏–π' + '\n' + 'üü° - –Ω–∞ –ø–∞—Ä—ñ' + '\n' + 'üü¢ - –≤—ñ–ª—å–Ω–∏–π', reply_markup=keyboard)
            i['islog'] = True

    with open('admin.json', 'w') as file:
        json.dump(base, file)

    log = codecs.open("log.txt", "a", 'utf-8')
    log.write('[' + str(datetime.now()) + ']' + " ID: " + str(message.chat.id) + ' action:' + message.text + ' \n')
    log.close()


@bot.callback_query_handler(func=lambda call: True) 
def callback_worker(call):
    global user_base_reset
    global base_message
    global teacher_message
    global teacher_call
    global mainIDMessage
    global mailAuth
    global teamsAuth
    global lastnameNameAuth

    # Main menu

    if call.data == "get-stud":
        keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1, resize_keyboard=1)
        item = types.KeyboardButton("–í—ñ–¥–º—ñ–Ω–∏—Ç–∏")
        keyboard.row(item)
        bot.send_message(call.message.chat.id, "–í—ñ–¥–ø—Ä–∞–≤—Ç–µ —Ñ–æ—Ç–æ –î–Ü–ô–°–ù–û–ì–û —Å—Ç—É–¥–µ–Ω—Ç—Å—å–∫–æ–≥–æ –∫–≤–∏—Ç–∫–∞ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è", reply_markup=keyboard)
        bot.delete_message(call.message.chat.id, call.message.id)
        # bot.edit_message_text("–í—ñ–¥–ø—Ä–∞–≤—Ç–µ —Ñ–æ—Ç–æ –î–Ü–ô–°–ù–û–ì–û —Å—Ç—É–¥–µ–Ω—Ç—Å—å–∫–æ–≥–æ –∫–≤–∏—Ç–∫–∞ –¥–ª—è –æ—Ç–º–∏–º–∞–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è", call.message.chat.id, call.message.id, reply_markup=keyboard)
        user_base_reset.update({call.message.chat.id:{}})
        user_base_reset[call.message.chat.id].update({"stud":1})

    elif call.data == "get-idcard":
        keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1, resize_keyboard=1)
        item = types.KeyboardButton("–í—ñ–¥–º—ñ–Ω–∏—Ç–∏")
        keyboard.row(item)
        user_base_reset.update({call.message.chat.id:{}})
        user_base_reset[call.message.chat.id].update({"idcard":1})

        bot.send_message(call.message.chat.id, "–î–ª—è –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó —á–µ—Ä–µ–∑ ID –∫–∞—Ä—Ç–∫—É, –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ –ü–Ü–ë —Ç–∞ –æ—Å—Ç–∞–Ω–Ω—ñ —á–æ—Ç–∏—Ä–∏ —Ü–∏—Ñ—Ä–∏ –Ω–æ–º–µ—Ä–∞ –ø–∞—Å–ø–æ—Ä—Ç–∞" + '\n' + "–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ —Ç–∏–ø—É: –®–µ–≤—á–µ–Ω–∫–æ –¢–∞—Ä–∞—Å –ì—Ä–∏–≥–æ—Ä–æ–≤–∏—á 0000.", reply_markup=keyboard)
        bot.delete_message(call.message.chat.id, call.message.id)

    elif call.data == "rules":
        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.row(
            telebot.types.InlineKeyboardButton('–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é', callback_data='but-menu')
        )
        text = '–û—Å–Ω–æ–≤–Ω—ñ –ø—Ä–∞–≤–∏–ª–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω—è:' + '\n' + "1. –ù–µ —Å–ø–∞–º–∏—Ç–∏ –±–æ—Ç—É, —É –≤–∏–ø–∞–¥–∫—É —Å–ø–∞–º—É –≤–∞—à –∞–∫–∞—É–Ω—Ç –±—É–¥–µ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π." + '\n' + '2. –ù–∞–¥—Å–∏–ª–∞—Ç–∏ –ª–∏—à–µ —Ñ–æ—Ç–æ —Å—Ç—É–¥–µ–Ω—Ç—Å—å–∫–æ–≥–æ –∫–≤–∏—Ç–∫–∞. –ù–∞–¥—Å–∏–ª–∞—Ç–∏ —Ñ–æ—Ç–æ –º–æ–∂–Ω–∞ –∑ –±—É–¥—å —è–∫–æ–≥–æ —Ä–∞–∫—É—Ä—Å—É, –≥–æ–ª–æ–≤–Ω–µ, —â–æ–± —Ñ–æ—Ç–æ –º–∞–ª–æ –¥–æ—Å—Ç–∞—Ç–Ω—î –æ—Å–≤—ñ—Ç–ª–µ–Ω–Ω—è' + '\n' + '3. –§–æ—Ç–æ —Å—Ç—É–¥–µ–Ω—Ç—Å—å–∫–æ–≥–æ –∫–≤–∏—Ç–∫–∞ –∑ –¥–æ–¥–∞—Ç–∫—É –î—ñ—è –Ω–µ –ø—Ä–∏–π–º–∞—é—Ç—å—Å—è, –±–æ—Ç –±—É–¥–µ –≤–∏–¥–∞–≤–∞—Ç–∏ –ø–æ–º–∏–ª–∫—É' + '\n' + "4. –û–±–æ–≤'—è–∑–∫–æ–≤–æ—é —É–º–æ–≤–æ—é —Å–∫–∏–¥–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è —î —ñ–¥–µ–Ω—Ç–∏—á–Ω—ñ—Å—Ç—å –ü–Ü–ë –≤ –¥–æ–∫—É–º–µ–Ω—Ç—ñ —Ç–∞ MS Teams, —É –≤–∏–ø–∞–¥–∫—É, —è–∫—â–æ –ü–Ü–ë –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—î, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –∑–º—ñ–Ω–∏ –ü–Ü–ë"

        bot.edit_message_text(text, call.message.chat.id, call.message.id, reply_markup=keyboard)
        
    elif call.data == "but-faq":
        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.row(
            telebot.types.InlineKeyboardButton('–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é', callback_data='but-menu')
        )

        text = "1. –Ø –Ω–µ –º–æ–∂—É –∑–∞–π—Ç–∏, –º–æ—è –ø–æ—à—Ç–∞ ...@gmail.com (ukr.net,...)" + "\n" + "–í—ñ–¥–ø–æ–≤—ñ–¥—å: –∫–æ–∂–Ω–æ–º—É —Å—Ç—É–¥–µ–Ω—Ç—É —Å—Ç–≤–æ—Ä–µ–Ω–æ –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å —Ç–∏–ø—É ...@kdktgg.onmicrosoft.com –∞–±–æ ...@ktgg.kiev.ua, —Ç—ñ–ª—å–∫–∏ –ø—ñ–¥ —Ü–∏–º –∑–∞–ø–∏—Å–æ–º –≤–∏ –º–æ–∂–µ—Ç–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è MS Teams" + '\n' + "2. –ü–∞—Ä–æ–ª—å –Ω–µ–≤—ñ—Ä–Ω–∏–π, —è –≤–≤–æ–∂—É —Ç–æ–π —â–æ –º–µ–Ω—ñ –¥–∞–≤ –∫—É—Ä–∞—Ç–æ—Ä" + "\n" + "–í—ñ–¥–ø–æ–≤—ñ–¥—å: –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É –≤—Ö–æ–¥—ñ –≤ —Å–≤—ñ–π –∞–∫–∞—É–Ω—Ç –í–°–Ü –∑–º—ñ–Ω—é—é—Ç—å –ø–∞—Ä–æ–ª—å –Ω–∞ –±—É–¥—å-—è–∫–∏–π —Å–≤—ñ–π, —Ç–æ–º—É –ø—Ä–∏ –ø–æ–¥–∞–ª—å—à–æ–º—É –≤—Ö–æ–¥—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Å–∞–º–µ –π–æ–≥–æ" + '\n' + "3. –Ø –Ω–µ –±–∞—á—É –≥—Ä—É–ø —É —Å–µ–±–µ" + "\n" + "–í—ñ–¥–ø–æ–≤—ñ–¥—å: —É–≤–∞–∂–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ —á–∏ –∑–∞–π—à–∏ –≤–∏ –ø—ñ–¥ –∞–∫–∞—É–Ω—Ç–æ–º, —â–æ –≤–∞–º –Ω–∞–¥–∞–ª–∏, —è–∫—â–æ –Ω—ñ, —Ç–æ –ø–µ—Ä–µ–∑–∞–π–¥—ñ—Ç—å, —Ç–∞–∫ - –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞" + '\n' + "4. –Ø –Ω–µ –±–∞—á—É –∑–∞–Ω—è—Ç—å —É –∫–∞–ª–µ–Ω–¥–∞—Ä—ñ" + "\n" + "–í—ñ–¥–ø–æ–≤—ñ–¥—å: —É–≤–∞–∂–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ —á–∏ –∑–∞–π—à–∏ –≤–∏ –ø—ñ–¥ –∞–∫–∞—É–Ω—Ç–æ–º, —â–æ –≤–∞–º –Ω–∞–¥–∞–ª–∏, —è–∫—â–æ –Ω—ñ, —Ç–æ –ø–µ—Ä–µ–∑–∞–π–¥—ñ—Ç—å, —è–∫—â–æ –≤–∞—Å –¥–æ–¥–∞–ª–∏ –ø—ñ–∑–Ω—ñ—à–µ, —Ç–æ –∑–∞–Ω—è—Ç—Ç—è —Å—Ç–≤–æ—Ä–µ–Ω—ñ —Ä–∞–Ω—ñ—à–µ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—ñ –Ω–µ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—é—Ç—å—Å—è, –ø—ñ–¥–∫–ª—é—á–∞—Ç–∏—Å—è –¥–æ –Ω–∏—Ö –º–æ–∂–Ω–∞ —á–µ—Ä–µ–∑ '–ö–æ–º–∞–Ω–¥–∏'" + '\n' + '5. –£ –º–µ–Ω–µ –∑–∞–ª–∏—à–∏–≤—Å—è —Ä–æ–∑–∫–ª–∞–¥ –º–∏–Ω—É–ª–æ–≥–æ —Ä–æ–∫—É' + '\n' + '–í—ñ–¥–ø–æ–≤—ñ–¥—å: –≤–∏ –º–æ–∂–µ—Ç–µ –π–æ–≥–æ –≤–∏–¥–∞–ª–∏—Ç–∏ —á–µ—Ä–µ–∑ \'–ö–∞–ª–µ–Ω–¥–∞—Ä\'' + '\n' + '6. –£ –º–µ–Ω–µ –Ω–µ–º–∞—î –ª–æ–≥—ñ–Ω–∞' + '\n' + '–í—ñ–¥–ø–æ–≤—ñ–¥—å: –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∫—É—Ä–∞—Ç–æ—Ä–∞ –∑–∞ –ª–æ–≥—ñ–Ω–æ–º, —É –≤–∏–ø–∞–¥–∫—É –≤—ñ–¥—Å—É—Ç–Ω–æ—Å—Ç—ñ —É –∫—É—Ä–∞—Ç–æ—Ä–∞ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞' + '\n' + '7. –Ø –≤—Ç—Ä–∞—Ç–∏–≤ –ª–æ–≥—ñ–Ω —Ç–∞ –ø–∞—Ä–æ–ª—å' + '\n' + '–í—ñ–¥–ø–æ–≤—ñ–¥—å: –º–æ–∂–µ—Ç–µ —Å–∫–∏–Ω—É—Ç–∏ –ø–∞—Ä–æ–ª—å —ñ –æ—Ç—Ä–∏–º–∞—Ç–∏ –ª–æ–≥—ñ–Ω, —É –≤–∏–ø–∞–¥–∫—É –≤—ñ–¥—Å—É—Ç–Ω–æ—Å—Ç—ñ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤'

        bot.edit_message_text(text, call.message.chat.id, call.message.id, reply_markup=keyboard)

    elif call.data == "reset-pass":
        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.row(
            telebot.types.InlineKeyboardButton('–°—Ç—É–¥–µ–Ω—Ç—Å—å–∫–∏–π –∫–≤–∏—Ç–æ–∫', callback_data='get-stud'),
            telebot.types.InlineKeyboardButton('ID –∫–∞—Ä—Ç–∞', callback_data='get-idcard')
        )
        keyboard.row(
            telebot.types.InlineKeyboardButton('–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é', callback_data='but-menu')
        )
        text = "–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó:"

        bot.edit_message_text(text, call.message.chat.id, call.message.id, reply_markup=keyboard)
    elif call.data == "but-menu":
        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.row(
            telebot.types.InlineKeyboardButton('–ü—Ä–∞–≤–∏–ª–∞', callback_data='rules'),
            telebot.types.InlineKeyboardButton('FAQ', callback_data='but-faq')
        )
        keyboard.row(
            telebot.types.InlineKeyboardButton('–°–∫–∏–Ω—É—Ç–∏ –ø–∞—Ä–æ–ª—å', callback_data='reset-pass'),
            telebot.types.InlineKeyboardButton('–î–ª—è –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫—ñ–≤', callback_data='teacher')
        )
        keyboard.row(
            telebot.types.InlineKeyboardButton('–ù–∞–ø–∏—Å–∞—Ç–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É', callback_data='message-admin')
        )
        keyboard.row(
            telebot.types.InlineKeyboardButton('–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏ –æ–Ω–ª–∞–π–Ω', callback_data='admin-online')
        )
        text = "–û–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω—É –¥—ñ—é:"

        bot.edit_message_text(text, call.message.chat.id, call.message.id, reply_markup=keyboard)
        try:
            del(user_base_reset[call.message.chat.id])
        except KeyError:
            pass

    elif call.data == "message-admin":
        
        keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1, resize_keyboard=1)
        item = types.KeyboardButton("–í—ñ–¥–º—ñ–Ω–∏—Ç–∏")
        keyboard.row(item)
        bot.send_message(call.message.chat.id, "–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–±–æ –≤—ñ–¥–º—ñ–Ω—ñ—Ç—å –¥—ñ—é", reply_markup=keyboard)
        bot.delete_message(call.message.chat.id, call.message.id)
        # bot.edit_message_text("–í—ñ–¥–ø—Ä–∞–≤—Ç–µ —Ñ–æ—Ç–æ –î–Ü–ô–°–ù–û–ì–û —Å—Ç—É–¥–µ–Ω—Ç—Å—å–∫–æ–≥–æ –∫–≤–∏—Ç–∫–∞ –¥–ª—è –æ—Ç–º–∏–º–∞–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è", call.message.chat.id, call.message.id, reply_markup=keyboard)
        base_message.update({call.message.chat.id:{}})
        base_message[call.message.chat.id].update({"message":True})

    # Valid Mail
    elif call.data == 'acc-mail':
        keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1, resize_keyboard=1)
        item = types.KeyboardButton("–í—ñ–¥–º—ñ–Ω–∏—Ç–∏")
        keyboard.row(item)
        bot.send_message(call.message.chat.id, "–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –∞–¥—Ä–µ—Å—É –í–∞—à–æ—ó –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ—ó –ø–æ—à—Ç–∏ –∞–±–æ –≤—ñ–¥–º—ñ–Ω—ñ—Ç—å –¥—ñ—é", reply_markup=keyboard)

        mailAuth.update({call.message.chat.id:{}})
        mailAuth[call.message.chat.id].update({"auth":False, "code": None, "mail": None})
    
    elif call.data == 'acc-teams':
        keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1, resize_keyboard=1)
        item = types.KeyboardButton("–í—ñ–¥–º—ñ–Ω–∏—Ç–∏")
        keyboard.row(item)
        bot.send_message(call.message.chat.id, "–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –ª–æ–≥—ñ–Ω (...@ktgg.kiev.ua –∞–±–æ ...@kdktgg.onmicrosoft.com) –∞–±–æ –≤—ñ–¥–º—ñ–Ω—ñ—Ç—å –¥—ñ—é", reply_markup=keyboard)

        teamsAuth.update({call.message.chat.id:{}})
        teamsAuth[call.message.chat.id].update({"auth":False, "code": None, "mail": None})

    elif call.data == 'acc-lastname':
        keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1, resize_keyboard=1)
        item = types.KeyboardButton("–í—ñ–¥–º—ñ–Ω–∏—Ç–∏")
        keyboard.row(item)
        bot.send_message(call.message.chat.id, "–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –í–∞—à–µ –ø—Ä—ñ–∑–≤–∏—â–µ", reply_markup=keyboard)

        lastnameNameAuth.update({call.message.chat.id:{}})
        lastnameNameAuth[call.message.chat.id].update({"name":False, "lastname": True})
    
    elif call.data == 'acc-name':
        keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1, resize_keyboard=1)
        item = types.KeyboardButton("–í—ñ–¥–º—ñ–Ω–∏—Ç–∏")
        keyboard.row(item)
        bot.send_message(call.message.chat.id, "–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –í–∞—à–µ —ñ–º\'—è", reply_markup=keyboard)

        lastnameNameAuth.update({call.message.chat.id:{}})
        lastnameNameAuth[call.message.chat.id].update({"name":True, "lastname": False})

    elif call.data == 'acc-password':
        bot.edit_message_text("–ó–∞—á–µ–∫–∞–π—Ç–µ, –π–¥–µ –ø–æ—à—É–∫ –¥–∞–Ω–∏—Ö",call.message.chat.id, call.message.id)
        teams = base_commands.getTeams(call.message.chat.id)
        newData = changePass.resetPass_bot(teams)
        msg = bot.send_message(call.message.chat.id,"–î–∞–Ω—ñ –∑–Ω–∞–π–¥–µ–Ω–æ." + '\n' + "–í–∞—à –ª–æ–≥—ñ–Ω: " + newData[2] + "\n" + "–í–∞—à —Ç–∏–º—á–∞—Å–æ–≤–∏–π –ø–∞—Ä–æ–ª—å: " + newData[1] + "\n" + "–ü—Ä–∏ –≤—Ö–æ–¥—ñ –∑–º—ñ–Ω—é—î—Ç–µ –ø–∞—Ä–æ–ª—å –Ω–∞ —Å–≤—ñ–π, —è–∫–∏–π –≤ –ø–æ–¥–∞–ª—å—à–æ–º—É –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è –¥–ª—è –≤—Ö–æ–¥—É")
        myAccount(msg)       


    # Check admin online
    elif call.data == 'admin-online':
        base = json.load(codecs.open("admin.json", 'r', 'utf-8-sig'))
        baseStatus = {'üî¥':'–∑–∞–π–Ω—è—Ç–∏–π', 'üü†': '–Ω–µ –∞–∫—Ç–∏–≤–Ω–∏–π', 'üü°': '–Ω–∞ –ø–∞—Ä—ñ', 'üü¢': '–≤—ñ–ª—å–Ω–∏–π'}
        messageText = ''
        for i in base:
            if i['id'] == 684828985:
                messageText += '–†–æ–º–∞ –°—ñ—á–∫–æ: ' + i['status'] + ' - ' + baseStatus[i['status']] + '\n'
            if i['id'] == 461655305:
                messageText += '–ë–æ–≥–¥–∞–Ω–∞ –°–µ—Ä–≥—ñ—î–Ω–∫–æ: ' + i['status'] + ' - ' + baseStatus[i['status']] + '\n'
            if i['id'] == 365794368:
                messageText += '–ù—ñ–∫—ñ—Ç–∞ –ü–∞–ø—ñ—Ä–Ω–∏–π: ' + i['status'] + ' - ' + baseStatus[i['status']] + '\n'

        bot.delete_message(call.message.chat.id, call.message.id)
        msg = bot.send_message(call.message.chat.id, messageText)


        main_menu(msg)

    # teacher menu

    elif call.data == 'teacher':
        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.row(
            telebot.types.InlineKeyboardButton('–°–∫–∏–Ω—É—Ç–∏ –ø–∞—Ä–æ–ª—å', callback_data='teacher-reset')
        )
        keyboard.row(
            telebot.types.InlineKeyboardButton('–î–∑–≤—ñ–Ω–æ–∫ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É', callback_data='teacher-call'),
            telebot.types.InlineKeyboardButton('–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É', callback_data='teacher-message')
        )
        keyboard.row(
            telebot.types.InlineKeyboardButton('–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é', callback_data='but-menu')
        )

        text = "–û–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω—É –¥—ñ—é:"

        bot.edit_message_text(text, call.message.chat.id, call.message.id, reply_markup=keyboard)

    elif call.data == "teacher-reset":
        keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1, resize_keyboard=1)
        item = types.KeyboardButton("–í—ñ–¥–º—ñ–Ω–∏—Ç–∏")
        keyboard.row(item)
        teacher_base_reset.update({call.message.chat.id:{}})
        teacher_base_reset[call.message.chat.id].update({"id":1})

        bot.send_message(call.message.chat.id, "–î–ª—è –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ –æ—Å–æ–±–æ–≤–∏–π ID —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ, —ñ–º\'—è, –ø–æ –±–∞—Ç—å–∫–æ–≤—ñ. –ù–∞–ø—Ä–∏–∫–ª–∞–¥: 123456 –ê–Ω—Ç–æ–Ω–æ–≤ –ê–Ω—Ç–æ–Ω –ê–Ω—Ç–æ–Ω–æ–≤–∏—á", reply_markup=keyboard)

    elif call.data == 'teacher-message':
        keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1, resize_keyboard=1)
        item = types.KeyboardButton("–í—ñ–¥–º—ñ–Ω–∏—Ç–∏")
        keyboard.row(item)

        bot.send_message(call.message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –æ—Å–æ–±–æ–≤–∏–π ID —Ç–∞ –ü–Ü–ë", reply_markup=keyboard)
        bot.delete_message(call.message.chat.id, call.message.id)

        teacher_message.update({call.message.chat.id: {}})
        teacher_message[call.message.chat.id].update({"isLog": False})

    elif call.data == 'teacher-call':
        keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1, resize_keyboard=1)
        item = types.KeyboardButton("–í—ñ–¥–º—ñ–Ω–∏—Ç–∏")
        keyboard.row(item)

        bot.send_message(call.message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –æ—Å–æ–±–æ–≤–∏–π ID —Ç–∞ –ü–Ü–ë", reply_markup=keyboard)
        bot.delete_message(call.message.chat.id, call.message.id)

        teacher_call.update({call.message.chat.id: {}})
        teacher_call[call.message.chat.id].update({"isLog": False})


    #admin menu

    elif call.data == "admin-quit":
        if call.message.chat.id in admin_base:
            bot.send_message(call.message.chat.id, "–í–∏ –ø–æ–∫–∏–Ω—É–ª–∏ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å. –©–æ–± –∑–Ω–æ–≤—É –∑–∞–π—Ç–∏ –Ω–∞–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É")
            del(admin_base[call.message.chat.id])
        else:
            bot.send_message(call.message.chat.id, "–í–∏ –Ω–µ –±—É–ª–∏ –≤ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ")

    
    elif call.data == "admin-id":
        if call.message.chat.id in admin_base:
            bot.send_message(call.message.chat.id, "ID")
            admin_base[call.message.chat.id]["id"] = True
            admin_base[call.message.chat.id]["pib"] = False
            admin_base[call.message.chat.id]["id-message"] = False
            admin_base[call.message.chat.id]["delete"] = False
        else:
            bot.send_message(call.message.chat.id, "–ù–µ –≤–µ—Ä–∏—Ñ—ñ–∫–æ–≤–∞–Ω–æ")

    elif call.data == "admin-pib":
        if call.message.chat.id in admin_base:
            bot.send_message(call.message.chat.id, "–Ü–º'—è, –ø—Ä—ñ–∑–≤–∏—â–µ")
            admin_base[call.message.chat.id]["pib"] = True
            admin_base[call.message.chat.id]["id"] = False
            admin_base[call.message.chat.id]["id-message"] = False
            admin_base[call.message.chat.id]["delete"] = False
        else:
            bot.send_message(call.message.chat.id, "–ù–µ –≤–µ—Ä–∏—Ñ—ñ–∫–æ–≤–∞–Ω–æ")

    elif call.data == "admin-send":
        if call.message.chat.id in admin_base:
            base = json.load(codecs.open("message.json", 'r', 'utf-8-sig'))
            # print(base)
            for i in base:
                if i['status'] == False:
                    bot.send_message(call.message.chat.id, 'mainIDMessage: ' + str(i['mainIDMessage']) + '\n' + "id: " + str(i["id"]) + '\n' + 'username: ' + str(i['username']) + '\n' + 'From: ' + i['from'] + '\n' + 'Message: ' + i['message'])

            bot.send_message(call.message.chat.id, "mainIDMessage / ID user / message")
            admin_base[call.message.chat.id]["id-message"] = True
            admin_base[call.message.chat.id]["pib"] = False
            admin_base[call.message.chat.id]["id"] = False
            admin_base[call.message.chat.id]["delete"] = False
        else:
            bot.send_message(call.message.chat.id, "–ù–µ –≤–µ—Ä–∏—Ñ—ñ–∫–æ–≤–∞–Ω–æ")

    elif call.data == "admin-delete":
        if call.message.chat.id in admin_base:
            keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1, resize_keyboard=1)
            item = types.KeyboardButton("–ó–∞–≤–µ—Ä—à–∏—Ç–∏")
            keyboard.row(item)
            bot.send_message(call.message.chat.id, "–Ü–º\'—è, –ø—Ä—ñ–∑–≤–∏—â–µ", reply_markup=keyboard)

            admin_base[call.message.chat.id]["id-message"] = False
            admin_base[call.message.chat.id]["pib"] = False
            admin_base[call.message.chat.id]["id"] = False
            admin_base[call.message.chat.id]["delete"] = True
        else:
            bot.send_message(call.message.chat.id, "–ù–µ –≤–µ—Ä–∏—Ñ—ñ–∫–æ–≤–∞–Ω–æ")
    # else: 
    #     bot.send_message(call.message.chat.id, "–ù–µ –≤–µ—Ä–∏—Ñ—ñ–∫–æ–≤–∞–Ω–æ")
    log = codecs.open("log.txt", "a", 'utf-8')
    log.write('[' + str(datetime.now()) + ']' + " ID: " + str(call.message.chat.id) + ' calldata: ' + call.data + ' \n')
    log.close()

@bot.message_handler(content_types=['text'])
def reset_idcard(message):
    global user_base_reset
    global admin_base
    global base_message
    global teacher_message
    global mainIDMessage
    global mailAuth
    global lastnameNameAuth
    global teamsAuth

    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.row(
        telebot.types.InlineKeyboardButton('–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é', callback_data='but-menu')
    )

    # if user_base_reset == {}:
    #     bot.send_message(message.chat.id,"–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞")
    if message.text == "–í—ñ–¥–º—ñ–Ω–∏—Ç–∏":
        if message.chat.id in user_base_reset or message.chat.id in base_message or message.chat.id in teacher_message or message.chat.id in teacher_call or message.chat.id in teacher_base_reset or message.chat.id in mailAuth or message.chat.id in lastnameNameAuth or message.chat.id in teamsAuth:
            markup = types.ReplyKeyboardRemove(selective=False)
            msg = bot.send_message(message.chat.id, '–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—å –¥–æ –º–µ–Ω—é', reply_markup=markup)

            # bot.register_next_step_handler(msg, main_menu)

            main_menu(msg)

            if message.chat.id in user_base_reset:
                try:
                    del(user_base_reset[message.chat.id])
                except KeyError:
                    pass
            elif message.chat.id in base_message:
                try:
                    del(base_message[message.chat.id])
                except KeyError:
                    pass
            elif message.chat.id in teacher_message:
                try:
                    del(teacher_message[message.chat.id])
                except KeyError:
                    pass
            elif message.chat.id in teacher_call:
                try:
                    del(teacher_call[message.chat.id])
                except KeyError:
                    pass
            elif message.chat.id in teacher_base_reset:
                try:
                    del(teacher_base_reset[message.chat.id])
                except KeyError:
                    pass
            elif message.chat.id in mailAuth:
                try:
                    del(mailAuth[message.chat.id])
                except KeyError:
                    pass
            elif message.chat.id in lastnameNameAuth:
                try:
                    del(lastnameNameAuth[message.chat.id])
                except KeyError:
                    pass
            elif message.chat.id in teamsAuth:
                try:
                    del(teamsAuth[message.chat.id])
                except KeyError:
                    pass
        return

    elif message.text == "–ó–∞–≤–µ—Ä—à–∏—Ç–∏":
        if message.chat.id in admin_base:
            markup = types.ReplyKeyboardRemove(selective=False)
            msg = bot.send_message(message.chat.id, '–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é', reply_markup=markup)

            admin_panel(msg)

            if "delete" in admin_base[message.chat.id] and admin_base[message.chat.id]["delete"]:
                admin_base[message.chat.id]["delete"] = False

    elif message.text == '–ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–æ–∑–º–æ–≤—É':
        if message.chat.id in teacher_call:
            markup = types.ReplyKeyboardRemove(selective=False)
            
            if message.chat.id in teacher_call and 'msg' in teacher_call[message.chat.id]:
                for i in teacher_call[message.chat.id]['msg']:
                    bot.delete_message(message.chat.id, i)

            msg = bot.send_message(message.chat.id, '–ú–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ —Ä–æ–±–æ—Ç—É', reply_markup=markup)

            # bot.register_next_step_handler(msg, main_menu)

            main_menu(msg)

            try:
                del(teacher_call[message.chat.id])

            except KeyError:
                pass

    elif message.text in 'üî¥üü†üü°üü¢':

        markup = types.ReplyKeyboardRemove(selective=False)
        base = json.load(codecs.open("admin.json", 'r', 'utf-8-sig'))

        for i in base:
            if i['id'] == message.chat.id and i['islog'] == True:
                if message.text == 'üî¥':
                    i['status'] = 'üî¥'


                elif message.text == 'üü†':
                    i['status'] = 'üü†'

                elif message.text == 'üü°':
                    i['status'] = 'üü°'

                elif message.text == 'üü¢':
                    i['status'] = 'üü¢'

                with open('admin.json', 'w') as file:
                    json.dump(base, file)

                msg = bot.send_message(message.chat.id, '–í–∞—à —Å—Ç–∞—Ç—É—Å –∑–º—ñ–Ω–µ–Ω–æ', reply_markup=markup)

                main_menu(msg)


    
    if message.chat.id in user_base_reset and user_base_reset[message.chat.id]:
        text = message.text.split()
        if len(text) == 4:
            markup = types.ReplyKeyboardRemove(selective=False)
            bot.send_message(message.chat.id, "–ó–∞—á–µ–∫–∞–π—Ç–µ, –ø–µ—Ä–µ–≤—ñ—Ä—è—é –¥–∞–Ω—ñ", reply_markup=markup)

            check = changePass.resetPass_idcard(text[0], text[1], text[2], text[3])
            file = codecs.open("pass.txt", "a", 'utf-8')

            if check[0]:
                markup = types.ReplyKeyboardRemove(selective=False)
                bot.send_message(message.chat.id,"–î–∞–Ω—ñ –∑–Ω–∞–π–¥–µ–Ω–æ." + '\n' + "–í–∞—à –ª–æ–≥—ñ–Ω: " + check[2] + "\n" + "–í–∞—à —Ç–∏–º—á–∞—Å–æ–≤–∏–π –ø–∞—Ä–æ–ª—å: " + check[1] + "\n" + "–ü—Ä–∏ –≤—Ö–æ–¥—ñ –∑–º—ñ–Ω—é—î—Ç–µ –ø–∞—Ä–æ–ª—å –Ω–∞ —Å–≤—ñ–π, —è–∫–∏–π –≤ –ø–æ–¥–∞–ª—å—à–æ–º—É –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è –¥–ª—è –≤—Ö–æ–¥—É", reply_markup=markup)
                bot.send_message(message.chat.id, "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ —Ä–æ–±–æ—Ç—É", reply_markup=keyboard)
                

                file.write(str(datetime.now()) + "\n" + "id: " + str(message.chat.id) + "\n" + "username: " + str(message.chat.username) + "\n" + "–í–∞—à –ª–æ–≥—ñ–Ω: " + check[2] + "\n" + "–ü—Ä–∏ –≤—Ö–æ–¥—ñ –∑–º—ñ–Ω—é—î—Ç–µ –ø–∞—Ä–æ–ª—å –Ω–∞ —Å–≤—ñ–π, —è–∫–∏–π –≤ –ø–æ–¥–∞–ª—å—à–æ–º—É –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è –¥–ª—è –≤—Ö–æ–¥—É" + "\n" + "==========================" + "\n")

                try:
                    del(user_base_reset[message.chat.id])
                except KeyError:
                    pass
            elif check[0] == False and check[1] != "":

                bot.send_message(message.chat.id, check[1])

                # try:
                #     del(user_base_reset[message.chat.id])
                # except KeyError:
                #     pass
                file.write(str(datetime.now()) + "\n" + "id: " + str(message.chat.id) + "\n" + "username: " + str(message.chat.username) + "\n" + "–í–∏–±–∞—á—Ç–µ, –≤–∞—à—ñ –¥–∞–Ω—ñ –≤ –±–∞–∑—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ" + "\n" + "==========================" + "\n")
    
        
            else:
                markup = types.ReplyKeyboardRemove(selective=False)

                bot.send_message(message.chat.id,"–í–∏–±–∞—á—Ç–µ, –≤–∞—à—ñ –¥–∞–Ω—ñ –≤ –±–∞–∑—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –≤–ø–µ–≤–Ω—ñ—Ç—å—Å—è, —â–æ –≤–∏ –º–∞—î—Ç–µ –∞–∫–∞—É–Ω—Ç –≤ MS Teams –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞", reply_markup=markup)
                bot.send_message(message.chat.id, "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å, —â–æ–± –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é", reply_markup=keyboard)
                
                try:
                    del(user_base_reset[message.chat.id])
                except KeyError:
                    pass

            file.close()
        
        else:
            bot.send_message(message.chat.id,"–ù–µ–≤—ñ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ñ –¥–∞–Ω—ñ, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑")

    elif message.chat.id in teacher_base_reset and teacher_base_reset[message.chat.id]:
        if teacher_base_reset[message.chat.id]["id"]:
            text = message.text.split()
            if len(text) == 4:
                check = changePass.resetPass_teacher(text[0], text[1], text[2], text[3])
                file = codecs.open("pass.txt", "a", 'utf-8')

                if check[0]:
                    markup = types.ReplyKeyboardRemove(selective=False)
                    bot.send_message(message.chat.id,"–î–∞–Ω—ñ –∑–Ω–∞–π–¥–µ–Ω–æ." + '\n' + "–í–∞—à –ª–æ–≥—ñ–Ω: " + check[2] + "\n" + "–í–∞—à —Ç–∏–º—á–∞—Å–æ–≤–∏–π –ø–∞—Ä–æ–ª—å: " + check[1] + "\n" + "–ü—Ä–∏ –≤—Ö–æ–¥—ñ –∑–º—ñ–Ω—é—î—Ç–µ –ø–∞—Ä–æ–ª—å –Ω–∞ —Å–≤—ñ–π, —è–∫–∏–π –≤ –ø–æ–¥–∞–ª—å—à–æ–º—É –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è –¥–ª—è –≤—Ö–æ–¥—É", reply_markup=markup)
                    bot.send_message(message.chat.id, "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ —Ä–æ–±–æ—Ç—É", reply_markup=keyboard)
                    try:
                        del(teacher_base_reset[message.chat.id])
                    except KeyError:
                        pass

                    file.write(str(datetime.now()) + "\n" + "id: " + str(message.chat.id) + "\n" + "username: " + str(message.chat.username) + "\n" + "–í–∞—à –ª–æ–≥—ñ–Ω: " + check[2] + "\n" + "–ü—Ä–∏ –≤—Ö–æ–¥—ñ –∑–º—ñ–Ω—é—î—Ç–µ –ø–∞—Ä–æ–ª—å –Ω–∞ —Å–≤—ñ–π, —è–∫–∏–π –≤ –ø–æ–¥–∞–ª—å—à–æ–º—É –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è –¥–ª—è –≤—Ö–æ–¥—É" + "\n" + "==========================" + "\n")


                elif check[0] == False and check[1] != "":

                    bot.send_message(message.chat.id, check[1])
                    file.write(str(datetime.now()) + "\n" + "id: " + str(message.chat.id) + "\n" + "username: " + str(message.chat.username) + "\n" + "–í–∏–±–∞—á—Ç–µ, –≤–∞—à—ñ –¥–∞–Ω—ñ –≤ –±–∞–∑—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ" + "\n" + "==========================" + "\n")


                else:
                    markup = types.ReplyKeyboardRemove(selective=False)

                    bot.send_message(message.chat.id,"–í–∏–±–∞—á—Ç–µ, –≤–∞—à—ñ –¥–∞–Ω—ñ –≤ –±–∞–∑—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –≤–ø–µ–≤–Ω—ñ—Ç—å—Å—è, —â–æ –≤–∏ –º–∞—î—Ç–µ –∞–∫–∞—É–Ω—Ç –≤ MS Teams –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞", reply_markup=markup)
                    bot.send_message(message.chat.id, "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å, —â–æ–± –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é", reply_markup=keyboard)
                    try:
                        del(teacher_base_reset[message.chat.id])
                    except KeyError:
                        pass
                file.close()
            else:
                bot.send_message(message.chat.id,"–ù–µ–≤—ñ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ñ –¥–∞–Ω—ñ, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑")

    elif message.chat.id in base_message:
        if base_message[message.chat.id]["message"]:
            markup = types.ReplyKeyboardRemove(selective=False)

            base = json.load(codecs.open("message.json", 'r', 'utf-8-sig'))

            

            tempBase = {'mainIDMessage': mainIDMessage, "id": message.chat.id, 'username': message.chat.username,  "from": "Student", "status": False, "message": message.text}

            base.append(tempBase)

            # print(base)

            with open("message.json", "w") as outfile:
                json.dump(base, outfile)
            
            mainIDMessage += 1

            bot.send_message(message.chat.id,"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É", reply_markup=markup)
            # bot.send_message(684828985,"id: " + str(message.chat.id) + '\n' + message.text)

            bot.send_message(message.chat.id, "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ —Ä–æ–±–æ—Ç—É", reply_markup=keyboard)
            try:
                del(base_message[message.chat.id])
            except KeyError:
                pass

    elif message.chat.id in admin_base:
            if admin_base[message.chat.id]["verify"] == False:
                if message.text == key.get_admin_key():
                    admin_base[message.chat.id]["verify"] = True
                    bot.send_message(message.chat.id,"–í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞")
                    admin_panel(message)
                else:
                    bot.send_message(message.chat.id,"–ù–µ–≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å, –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—é –≤—ñ–¥–º—ñ–Ω–µ–Ω–æ")   
            else:
                if "id" in admin_base[message.chat.id] and admin_base[message.chat.id]["id"]:
                    if '@ktgg.kiev.ua' in message.text or '@kdktgg.onmicrosoft.com' in message.text:
                        newpass = changePass.resetPass_bot(message.text)

                        bot.send_message(message.chat.id,"–õ–æ–≥—ñ–Ω: " + newpass[2] + "\n" + "–¢–∏–º—á–∞—Å–æ–≤–∏–π –ø–∞—Ä–æ–ª—å: " + newpass[1] + "\n" + "–ü—Ä–∏ –≤—Ö–æ–¥—ñ –∑–º—ñ–Ω—é—î—Ç–µ –ø–∞—Ä–æ–ª—å –Ω–∞ —Å–≤—ñ–π, —è–∫–∏–π –≤ –ø–æ–¥–∞–ª—å—à–æ–º—É –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è –¥–ª—è –≤—Ö–æ–¥—É")

                    else:
                        bot.send_message(message.chat.id, "–ù–µ–≤—ñ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ñ –¥–∞–Ω—ñ")

                    del(admin_base[message.chat.id]["id"])

                elif "pib" in admin_base[message.chat.id] and admin_base[message.chat.id]["pib"]:
                    text = message.text.split()
                    if len(text) == 2:
                        newpass = changePass.resetPass_bot("0", message.text.split()[0],message.text.split()[1])
                        
                        bot.send_message(message.chat.id,"–õ–æ–≥—ñ–Ω: " + newpass[2] + "\n" + "–¢–∏–º—á–∞—Å–æ–≤–∏–π –ø–∞—Ä–æ–ª—å: " + newpass[1] + "\n" + "–ü—Ä–∏ –≤—Ö–æ–¥—ñ –∑–º—ñ–Ω—é—î—Ç–µ –ø–∞—Ä–æ–ª—å –Ω–∞ —Å–≤—ñ–π, —è–∫–∏–π –≤ –ø–æ–¥–∞–ª—å—à–æ–º—É –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è –¥–ª—è –≤—Ö–æ–¥—É")
                    else:
                        bot.send_message(message.chat.id, "–ü–æ–º–∏–ª–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—è")
                    

                    del(admin_base[message.chat.id]["pib"])
                
                elif "id-message" in admin_base[message.chat.id] and admin_base[message.chat.id]["id-message"]:
                    m = message.text.split()

                    if len(m) >= 3:

                    # base = json.load(codecs.open("admin.json", 'r', 'utf-8-sig'))

                    # for i in base:
                    #     if i['status'] == False:
                    #         bot.send_message(message.chat.id, "id: " + str(i["id"]) + '\n' + 'From: ' + i['from'] + '\n' + 'Message: ' + i['message'])

                        if m[0].isdigit():
                            base = json.load(codecs.open("message.json", 'r', 'utf-8-sig'))

                            for i in base:
                                if i['mainIDMessage'] == int(m[0]) and i['id'] == int(m[1]):
                                    if i['status'] == False:
                                        # print("Yes")

                                        if m[2].lower() == 'true':
                                            msg = bot.send_message(message.chat.id, "–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–º—ñ—á–µ–Ω–æ")

                                        else:
                                            bot.send_message(int(m[1]), "–í—ñ–¥–ø–æ–≤—ñ–¥—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞: " + '\n' + ' '.join(m[2:]))
                                            msg = bot.send_message(message.chat.id, "–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ")
                                        admin_panel(msg)

                                        i['status'] = True
                                        i['answer'] = ' '.join(m[2:])
                                        i['admin'] = message.chat.id
                                    else:
                                        msg = bot.send_message(message.chat.id, "–ù–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É–∂–µ –≤—ñ–¥–ø–æ–≤—ñ–ª–∏")
                                        admin_panel(msg)

                            
                            with open("message.json", "w") as outfile:
                                json.dump(base, outfile)


                            # bot.send_message(int(m[0]),' '.join(m[1:]))
                            # bot.send_message(message.chat.id, "–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ")
                            

                        else:
                            bot.send_message(message.chat.id, "–ù–µ–≤—ñ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ñ –¥–∞–Ω—ñ")
                    else:
                        bot.send_message(message.chat.id, "–ù–µ–≤—ñ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ñ –¥–∞–Ω—ñ")

                    del(admin_base[message.chat.id]["id-message"])
                

                elif "delete" in admin_base[message.chat.id] and admin_base[message.chat.id]["delete"]:
                    m = message.text.split()

                    result = changePass.detete_user(m[0], m[1])

                    if result[0]:
                        bot.send_message(message.chat.id, "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: " + result[2] + '\n' + "id: " + result[1] + '\n' + '–£—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–∏–π')

                    else:
                        bot.send_message(message.chat.id, '–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è: ' + m[0] + ' ' + m[1])

    elif message.chat.id in teacher_message:
        if teacher_message[message.chat.id]["isLog"] != True:
            messageText = message.text.split()
            teacherId = messageText[0]
            teacherName = ' '.join(messageText[1:])

            keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1, resize_keyboard=1)
            item = types.KeyboardButton("–í—ñ–¥–º—ñ–Ω–∏—Ç–∏")
            keyboard.row(item)

            if teacherId.isdigit() and teacherName:
                teachers = json.load(codecs.open("teacher.json", 'r', 'utf-8-sig'))

                for i in teachers:
                    # print(i)
                    if i['ID –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞'] == teacherId and i['–ü–Ü–ë'] == teacherName:

                        teacher_message[message.chat.id]["isLog"] = True

                        bot.send_message(message.chat.id, "–í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞. –í—ñ–¥–ø—Ä–∞–≤—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–±–æ –≤—ñ–¥–º—ñ–Ω—ñ—Ç—å –¥—ñ—é", reply_markup=keyboard)
                        
                if teacher_message[message.chat.id]["isLog"] == False:
                    bot.send_message(message.chat.id, "–î–∞–Ω—ñ –≤ –±–∞–∑—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø–æ–≤—Ç–æ—Ä—ñ—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—è –∞–±–æ –≤—ñ–¥–º—ñ–Ω—ñ—Ç—å –¥—ñ—é", reply_markup=keyboard)

            else:
                bot.send_message(message.chat.id, "–ù–µ–≤—ñ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ñ –¥–∞–Ω—ñ, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∫–æ—Ä–µ–∫—Ç–Ω—ñ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—è", reply_markup=keyboard)

        elif teacher_message[message.chat.id]["isLog"]:
            markup = types.ReplyKeyboardRemove(selective=False)
            base = json.load(codecs.open("message.json", 'r', 'utf-8-sig'))

            

            tempBase = {'mainIDMessage': mainIDMessage, "id": message.chat.id, 'username': message.chat.username,  "from": "Teacher", "status": False, "message": message.text}

            base.append(tempBase)

            # print(base)

            with open("message.json", "w") as outfile:
                json.dump(base, outfile)
            
            mainIDMessage += 1
            bot.send_message(message.chat.id, "–í–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É, —á–µ–∫–∞–π—Ç–µ –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å", reply_markup=markup)

            # bot.send_message(684828985,"id: " + str(message.chat.id) + '\n' + message.text)

            bot.send_message(message.chat.id, "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ —Ä–æ–±–æ—Ç—É", reply_markup=keyboard)

            try:
                del(teacher_message[message.chat.id])

            except KeyError:
                pass


    elif message.chat.id in teacher_call:
        if teacher_call[message.chat.id]["isLog"] != True:
            messageText = message.text.split()
            teacherId = messageText[0]
            teacherName = ' '.join(messageText[1:])

            keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1, resize_keyboard=1)
            item = types.KeyboardButton("–í—ñ–¥–º—ñ–Ω–∏—Ç–∏")
            keyboard.row(item)

            if teacherId.isdigit() and teacherName:
                teachers = json.load(codecs.open("teacher.json", 'r', 'utf-8-sig'))
                

                for i in teachers:
                    # print(i)
                    if i['ID –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞'] == teacherId and i['–ü–Ü–ë'] == teacherName:

                        teacher_call[message.chat.id]["isLog"] = True


                        # bot.send_message(message.chat.id, "–í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞. –í—ñ–¥–ø—Ä–∞–≤—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–±–æ –≤—ñ–¥–º—ñ–Ω—ñ—Ç—å –¥—ñ—é", reply_markup=keyboard)
                        markup = types.ReplyKeyboardRemove(selective=False)
                        undocall = types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=1, resize_keyboard=1)
                        undocall.row(
                            types.KeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–æ–∑–º–æ–≤—É')
                        )
            
                        base = json.load(codecs.open("admin.json", 'r', 'utf-8-sig'))

                        msgIdList = []

                        for i in base:
                            if i['status'] == 'üü¢' and i['id'] == 684828985:
                                msg = bot.send_contact(message.chat.id, "+380990995728", '–†–æ–º–∞', '–°—ñ—á–∫–æ', timeout=5, reply_markup=markup)
                                msgIdList.append(msg.id)
                                
                            elif i['status'] == 'üü¢' and i['id'] == 461655305:
                                msg = bot.send_contact(message.chat.id, "+380674050260", '–ë–æ–≥–¥–∞–Ω–∞', '–°–µ—Ä–≥—ñ—î–Ω–∫–æ', timeout=5, reply_markup=markup)
                                msgIdList.append(msg.id)

                            elif i['status'] == 'üü¢' and i['id'] == 365794368:
                                msg = bot.send_contact(message.chat.id, "+380983106160", '–ù—ñ–∫—ñ—Ç–∞', '–ü–∞–ø—ñ—Ä–Ω–∏–π', timeout=5, reply_markup=markup)
                                msgIdList.append(msg.id)
                        
                        bot.send_message(message.chat.id, '–û–±–µ—Ä—ñ—Ç—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Ç–∞ –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–π—Ç–µ –π–æ–º—É –≤ Telegram. –ü—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å "–ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–æ–∑–º–æ–≤—É" –≤ –±–æ—Ç—ñ', reply_markup=undocall)
                                
                        teacher_call[message.chat.id].update({'msg': msgIdList})
                        # teacher_call[message.chat.id].update({'time': datetime.now()})

                        # bot.send_message(message.chat.id, "–í–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É, —á–µ–∫–∞–π—Ç–µ –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å", reply_markup=markup)

                        # bot.send_message(684828985,"id: " + str(message.chat.id) + '\n' + message.text)

                        # bot.send_message(message.chat.id, "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ —Ä–æ–±–æ—Ç—É", reply_markup=keyboard)



                        # try:
                        #     del(teacher_call[message.chat.id])

                        # except KeyError:
                        #     pass
                        
                if teacher_call[message.chat.id]["isLog"] == False:
                    bot.send_message(message.chat.id, "–î–∞–Ω—ñ –≤ –±–∞–∑—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø–æ–≤—Ç–æ—Ä—ñ—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—è –∞–±–æ –≤—ñ–¥–º—ñ–Ω—ñ—Ç—å –¥—ñ—é", reply_markup=keyboard)

            else:
                bot.send_message(message.chat.id, "–ù–µ–≤—ñ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ñ –¥–∞–Ω—ñ, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∫–æ—Ä–µ–∫—Ç–Ω—ñ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—è", reply_markup=keyboard)

        elif teacher_call[message.chat.id]["isLog"]:
            pass

    elif message.chat.id in mailAuth:
        if mailAuth[message.chat.id]["code"] == None:
            if validMail(message.text):
                password = str(randint(100000, 999999))
                mailAuth[message.chat.id]["code"] = password
                mailAuth[message.chat.id]["mail"] = message.text
                changePass.mailSend(message.text, password)
                bot.send_message(message.chat.id, "–ù–∞ –í–∞—à—É –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É –Ω–∞–¥—ñ—Å–ª–∞–Ω–∏–π –∫–æ–¥ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è (–º–æ–∂–ª–∏–≤–æ –≤–æ–Ω–æ –ø–æ—Ç—Ä–∞–ø–∏–ª–æ –≤ —Å–ø–∞–º), –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –π–æ–≥–æ –±–æ—Ç—É")
            else:
                bot.send_message(message.chat.id, "–í–∏ –≤–≤–µ–ª–∏ –Ω–µ—ñ—Å–Ω—É—é—á—É –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É –∞–¥—Ä–µ—Å—É –∞–±–æ –≤—ñ–¥–º—ñ–Ω—ñ—Ç—å –¥—ñ—é")
        elif mailAuth[message.chat.id]["code"]:
            if message.text == mailAuth[message.chat.id]["code"]:
                markup = types.ReplyKeyboardRemove(selective=False)
                base_commands.updateDataMail(message.chat.id, mailAuth[message.chat.id]["mail"])
                msg = bot.send_message(message.chat.id, "–í–∞—à—É –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω–æ, –ø–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ –í–∞—à –∞–∫–∞—É–Ω—Ç", reply_markup=markup)
                try:
                    del(mailAuth[message.chat.id])
                except KeyError:
                    pass
                myAccount(msg)
            else:
                bot.send_message(message.chat.id, "–í–≤–µ–¥–µ–Ω–∏–π –∫–æ–¥ –Ω–µ–≤—ñ—Ä–Ω–∏–π, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –∞–±–æ –≤—ñ–¥–º—ñ–Ω—ñ—Ç—å –¥—ñ—é")

    elif message.chat.id in teamsAuth:
        if teamsAuth[message.chat.id]["code"] == None:
            if validMail(message.text):
                if message.text[message.text.find('@') + 1:] == "kdktgg.onmicrosoft.com" or message.text[message.text.find('@') + 1:] == "ktgg.kiev.ua":
                    if changePass.validTeams(message.text):
                        password = str(randint(100000, 999999))
                        teamsAuth[message.chat.id]["code"] = password
                        teamsAuth[message.chat.id]["mail"] = message.text
                        changePass.mailSend(message.text, password)
                        bot.send_message(message.chat.id, "–ü–µ—Ä–µ–π–¥—ñ—Ç—å –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º https://outlook.office.com/mail/inbox (—è–∫—â–æ –í–∞—Å –ø—Ä–æ—Å–∏—Ç—å —É–≤—ñ–π—Ç–∏, –≤–≤–æ–¥—å—Ç–µ –¥–∞–Ω—ñ –≤—ñ–¥ MS Teams), —É –ª–∏—Å—Ç—ñ –≤—ñ–¥ no-reply@ktgg.kiev.ua –≤–∫–∞–∑–∞–Ω–∏–π –∫–æ–¥, –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ –π–æ–≥–æ –±–æ—Ç—É" + "\n" + "–Ø–∫—â–æ –≤–∏–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º–∏, –º–æ–∂–µ—Ç–µ –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ @Roma_Sichko")
                    else:
                        bot.send_message(message.chat.id, "–ù–∞–º –Ω–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –≤–∞—à –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —ñ –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ —â–µ —Ä–∞–∑ –∞–±–æ –≤—ñ–¥–º—ñ–Ω—ñ—Ç—å –¥—ñ—é")
                else:
                    bot.send_message(message.chat.id, "–í–∏ –≤–≤–µ–ª–∏ –Ω–µ–≤—ñ—Ä–Ω–∏–π –ª–æ–≥—ñ–Ω, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–±–æ –≤—ñ–¥–º—ñ–Ω—ñ—Ç—å –¥—ñ—é")
            else:
                bot.send_message(message.chat.id, "–í–∏ –≤–≤–µ–ª–∏ –Ω–µ—ñ—Å–Ω—É—é—á—É –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É –∞–¥—Ä–µ—Å—É –∞–±–æ –≤—ñ–¥–º—ñ–Ω—ñ—Ç—å –¥—ñ—é")
        elif teamsAuth[message.chat.id]["code"]:
            if message.text == teamsAuth[message.chat.id]["code"]:
                markup = types.ReplyKeyboardRemove(selective=False)
                base_commands.updateDataTeams(message.chat.id, teamsAuth[message.chat.id]["mail"])
                msg = bot.send_message(message.chat.id, "–í–∞—à –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø—ñ—Å –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ, –í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ñ –Ω–æ–≤—ñ –¥—ñ—ó –≤ –∞–∫–∞—É–Ω—Ç—ñ", reply_markup=markup)
                try:
                    del(teamsAuth[message.chat.id])
                except KeyError:
                    pass
                myAccount(msg)
            else:
                bot.send_message(message.chat.id, "–í–≤–µ–¥–µ–Ω–∏–π –∫–æ–¥ –Ω–µ–≤—ñ—Ä–Ω–∏–π, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –∞–±–æ –≤—ñ–¥–º—ñ–Ω—ñ—Ç—å –¥—ñ—é")

    elif message.chat.id in lastnameNameAuth:
        if lastnameNameAuth[message.chat.id]['lastname']:
            markup = types.ReplyKeyboardRemove(selective=False)
            base_commands.updateDataLastname(message.chat.id, message.text)
            msg = bot.send_message(message.chat.id, "–í–∞—à—ñ –¥–∞–Ω—ñ –∑–º—ñ–Ω–µ–Ω–æ, –ø–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ —Å–≤—ñ–π –∞–∫–∞—É–Ω—Ç", reply_markup=markup)
            try:
                del(lastnameNameAuth[message.chat.id])
            except KeyError:
                pass
            myAccount(msg)
        elif lastnameNameAuth[message.chat.id]['name']:
            markup = types.ReplyKeyboardRemove(selective=False)
            base_commands.updateDataName(message.chat.id, message.text)
            msg = bot.send_message(message.chat.id, "–í–∞—à—ñ –¥–∞–Ω—ñ –∑–º—ñ–Ω–µ–Ω–æ, –ø–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ —Å–≤—ñ–π –∞–∫–∞—É–Ω—Ç", reply_markup=markup)
            try:
                del(lastnameNameAuth[message.chat.id])
            except KeyError:
                pass
            myAccount(msg)

    else:
        if message.chat.id == 684828985 or message.chat.id == 461655305 or message.chat.id == 365794368:
            pass
        else:
            bot.send_message(message.chat.id,"–ù–µ–≤—ñ–¥–æ–º–∞ –¥—ñ—è")
        

    log = codecs.open("log.txt", "a", 'utf-8')
    log.write('[' + str(datetime.now()) + ']' + " ID: " + str(message.chat.id) + ' action:' + message.text + ' \n')
    log.close()
    



# while True:
#     try:
#         bot.polling(none_stop=True, interval=0)
            
#     except ConnectionResetError:
#         print("No conection")
#         sleep(5)
#     # print(1)
    
bot.infinity_polling()